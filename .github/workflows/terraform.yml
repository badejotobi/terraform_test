name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      # Terraform action you want to perform
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - Terraform_apply
        - Terraform_destroy

jobs:
  Terraform_apply:
    name: 'Terraform_apply'
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.resource }}  # Ensure resource input is provided
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS credentials for authentication
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        run: terraform init

      # Check Terraform format and fail if formatting issues exist
      - name: Terraform Format Check
        run: terraform fmt -check

      # Generate and show Terraform plan
      - name: Terraform Plan
        run: terraform plan -input=false

      # Apply changes if confirmed in the action input
      - name: Terraform Apply
        run: terraform apply -auto-approve

  Terraform_destroy:
    name: 'Terraform_destroy'
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.resource }}
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS credentials for authentication
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        run: terraform init

      # Run Terraform destroy to tear down resources
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
